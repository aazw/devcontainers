name: Build devcontainer images

on:
  push:
    branches: [main]
    paths:
      - "images/*/.devcontainer/Dockerfile"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.filter.outputs.devcontainers_files || steps.all.outputs.devcontainers_files || '[]' }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        if: github.event_name == 'push'
        id: filter
        with:
          list-files: json
          filters: |
            devcontainers:
              - "images/*/.devcontainer/Dockerfile"
      - name: Get all Dockerfiles
        if: github.event_name == 'workflow_dispatch'
        id: all
        shell: bash
        run: |
          FILES=$(git ls-files 'images/*/.devcontainer/Dockerfile' \
            | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "devcontainers_files=$FILES" >> "$GITHUB_OUTPUT"

  build-devcontainer-images:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed_files != '[]' && needs.detect-changes.outputs.changed_files != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{ fromJson(needs.detect-changes.outputs.changed_files) }}
    steps:
      - uses: actions/checkout@v5

      - name: Derive build context and image name
        id: prep
        run: |
          DOCKERFILE='${{ matrix.dockerfile }}'                            # e.g. images/base/.devcontainer/Dockerfile
          CONTEXT="$(dirname "$DOCKERFILE")"                               # => images/base/.devcontainer
          IMAGE_NAME="$(basename "$(dirname "$(dirname "$DOCKERFILE")")")" # => base
          echo "context=$CONTEXT" >> "$GITHUB_OUTPUT"
          echo "image=$IMAGE_NAME" >> "$GITHUB_OUTPUT"

      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/graalvm
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/node_modules
          sudo docker system prune -af --volumes
          sudo apt-get clean
          df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ${{ steps.prep.outputs.image }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ steps.prep.outputs.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/aazw/devcontainers/${{ steps.prep.outputs.image }}:${{ github.sha }}
            ghcr.io/aazw/devcontainers/${{ steps.prep.outputs.image }}:${{ github.run_number }}
            ghcr.io/aazw/devcontainers/${{ steps.prep.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
